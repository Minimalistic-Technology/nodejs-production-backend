name: Deploy to Server

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Validate SSH env vars
      run: |
        echo "SSH_HOST set?    → ${SSH_HOST:+yes}${SSH_HOST:+" ( $SSH_HOST )"}"
        echo "SSH_USER set?    → ${SSH_USER:+yes}"
        echo "SSH_PORT set?    → ${SSH_PORT:+yes}{PORT: $SSH_PORT}"
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PORT: ${{ secrets.SSH_PORT }}

    - name: Test port reachability
      run: nc -zv $SSH_HOST $SSH_PORT || true

    - name: Test raw SSH connection (verbose)
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh -i ~/.ssh/id_ed25519 \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -vvv \
            -p $SSH_PORT \
            $SSH_USER@$SSH_HOST \
            echo "SSH handshake successful"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST:        ${{ secrets.SSH_HOST }}
        SSH_USER:        ${{ secrets.SSH_USER }}
        SSH_PORT:        ${{ secrets.SSH_PORT }}


    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test --if-present

    - name: Debug SSH connection
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SSD_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        debug: true
        script: |
          echo "Connected successfully!"
          whoami
          pwd
          ls -la

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SSD_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          pwd
